<?php
$pageTitle = 'ÏßÄÏ∂úÌòÑÌô©';
include 'includes/header.php';
?>

<main class="container">
    <div class="section">
        <div class="row">
            <div class="col s12">
                <h4 class="section-title"><i class="material-icons left">account_balance_wallet</i>ÏßÄÏ∂úÌòÑÌô©</h4>
            </div>
        </div>

        <!-- ÏõîÎ≥Ñ ÏÑ†ÌÉùÍ∏∞ -->
        <div class="row">
            <div class="col s12">
                <div class="card">
                    <div class="card-content center-align">
                        <h5 style="margin-bottom: 15px;">üìÖ Ï°∞Ìöå Í∏∞Í∞Ñ</h5>
                        <div class="row">
                            <div class="col s12 m6 offset-m3">
                                <div class="input-field">
                                    <select id="month-selector">
                                        <!-- ÎèôÏ†ÅÏúºÎ°ú ÏÉùÏÑ±Îê® -->
                                    </select>
                                    <label>Ï°∞Ìöå Ïõî ÏÑ†ÌÉù</label>
                                </div>
                            </div>
                        </div>
                        <div id="archive-controls" style="display: none; margin-top: 10px;">
                            <button class="btn blue" id="edit-archive-btn">
                                <i class="material-icons left">edit</i>ÏïÑÏπ¥Ïù¥Î∏å ÏàòÏ†ï
                            </button>
                            <button class="btn green" id="create-archive-btn" style="margin-left: 10px;">
                                <i class="material-icons left">archive</i>Ïä§ÎÉÖÏÉ∑ ÏÉùÏÑ±
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- ÏõîÍ∞Ñ ÏßÄÏ∂úÌòÑÌô© -->
        <div class="row">
            <div class="col s12">
                <div class="card">
                    <div class="card-content">
                        <h5 class="section-title center-align" style="margin-bottom: 20px;">üí∞ ÏõîÍ∞Ñ ÏßÄÏ∂úÌòÑÌô©</h5>
                        <div class="row">
                            <div class="col s12 m4">
                                <div class="center-align">
                                    <h6 style="color: #f44336; margin: 0;">Í≥†Ï†ïÏßÄÏ∂ú(ÏòàÏ†ï)</h6>
                                    <span id="fixed-expenses-total" style="font-size: 20px; font-weight: bold; color: #f44336;">‚Ç©0</span>
                                </div>
                            </div>
                            <div class="col s12 m4">
                                <div class="center-align">
                                    <h6 style="color: #2196F3; margin: 0;">Í≥†Ï†ïÏßÄÏ∂ú(ÏÑ†ÎÇ©)</h6>
                                    <span id="prepaid-expenses-total" style="font-size: 20px; font-weight: bold; color: #2196F3;">‚Ç©0</span>
                                </div>
                            </div>
                            <div class="col s12 m4">
                                <div class="center-align">
                                    <h6 style="color: #FF5722; margin: 0;">Ï¥ù ÏõîÍ∞ÑÏßÄÏ∂ú</h6>
                                    <span id="total-monthly-expenses" style="font-size: 20px; font-weight: bold; color: #FF5722;">‚Ç©0</span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Í≥†Ï†ïÏßÄÏ∂ú(ÏòàÏ†ï) ÏÑπÏÖò -->
        <div class="row">
            <div class="col s12">
                <div class="card">
                    <div class="card-content">
                        <div class="section-header" style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 20px;">
                            <h5 class="section-title" style="margin: 0;">üìã Í≥†Ï†ïÏßÄÏ∂ú(ÏòàÏ†ï)</h5>
                            <button class="btn-floating waves-effect waves-light green modal-trigger"
                                    data-target="add-fixed-expense-modal" title="Í≥†Ï†ïÏßÄÏ∂ú Ï∂îÍ∞Ä" id="add-fixed-expense-btn">
                                <i class="material-icons">add</i>
                            </button>
                        </div>

                        <!-- Îç∞Ïä§ÌÅ¨ÌÜ±Ïö© ÌÖåÏù¥Î∏î -->
                        <div class="responsive-table hide-on-small-only">
                            <table class="striped">
                                <thead>
                                    <tr>
                                        <th>Ìï≠Î™©Î™Ö</th>
                                        <th>Í∏àÏï°</th>
                                        <th>Í≤∞Ï†úÏùº</th>
                                        <th>ÏàòÎã®</th>
                                    </tr>
                                </thead>
                                <tbody id="fixed-expenses-table">
                                    <tr>
                                        <td colspan="4" class="center-align">Îç∞Ïù¥ÌÑ∞Î•º Î∂àÎü¨Ïò§Îäî Ï§ë...</td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>

                        <!-- Î™®Î∞îÏùºÏö© Ïπ¥Îìú -->
                        <div class="hide-on-med-and-up" id="fixed-expenses-cards">
                            <div class="center-align">Îç∞Ïù¥ÌÑ∞Î•º Î∂àÎü¨Ïò§Îäî Ï§ë...</div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Í≥†Ï†ïÏßÄÏ∂ú(ÏÑ†ÎÇ©) ÏÑπÏÖò -->
        <div class="row">
            <div class="col s12">
                <div class="card">
                    <div class="card-content">
                        <div class="section-header" style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 20px;">
                            <h5 class="section-title" style="margin: 0;">üí≥ Í≥†Ï†ïÏßÄÏ∂ú(ÏÑ†ÎÇ©)</h5>
                            <button class="btn-floating waves-effect waves-light blue modal-trigger"
                                    data-target="add-prepaid-expense-modal" title="ÏÑ†ÎÇ©ÏßÄÏ∂ú Ï∂îÍ∞Ä" id="add-prepaid-expense-btn">
                                <i class="material-icons">add</i>
                            </button>
                        </div>

                        <!-- Îç∞Ïä§ÌÅ¨ÌÜ±Ïö© ÌÖåÏù¥Î∏î -->
                        <div class="responsive-table hide-on-small-only">
                            <table class="striped">
                                <thead>
                                    <tr>
                                        <th>Ìï≠Î™©Î™Ö</th>
                                        <th>Í∏àÏï°</th>
                                        <th>Í≤∞Ï†úÏùº</th>
                                        <th>ÏàòÎã®</th>
                                    </tr>
                                </thead>
                                <tbody id="prepaid-expenses-table">
                                    <tr>
                                        <td colspan="4" class="center-align">Îç∞Ïù¥ÌÑ∞Î•º Î∂àÎü¨Ïò§Îäî Ï§ë...</td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>

                        <!-- Î™®Î∞îÏùºÏö© Ïπ¥Îìú -->
                        <div class="hide-on-med-and-up" id="prepaid-expenses-cards">
                            <div class="center-align">Îç∞Ïù¥ÌÑ∞Î•º Î∂àÎü¨Ïò§Îäî Ï§ë...</div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</main>

<!-- Í≥†Ï†ïÏßÄÏ∂ú Ï∂îÍ∞Ä Î™®Îã¨ -->
<div id="add-fixed-expense-modal" class="modal modal-fixed-footer">
    <div class="modal-content">
        <h4><i class="material-icons left">add</i>Í≥†Ï†ïÏßÄÏ∂ú Ï∂îÍ∞Ä</h4>
        <div class="row">
            <form id="add-fixed-expense-form" class="col s12">
                <div class="row">
                    <div class="input-field col s12">
                        <input id="add-fixed-item-name" type="text" class="validate" required maxlength="100">
                        <label for="add-fixed-item-name">Ìï≠Î™©Î™Ö*</label>
                        <span class="helper-text" data-error="Ìï≠Î™©Î™ÖÏùÑ ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî" data-success="">ÏµúÎåÄ 100Ïûê</span>
                    </div>
                </div>
                <div class="row">
                    <div class="input-field col s12 m4">
                        <input id="add-fixed-amount" type="number" class="validate" required min="0" max="999999999">
                        <label for="add-fixed-amount">Í∏àÏï°*</label>
                        <span class="helper-text" data-error="Ïò¨Î∞îÎ•∏ Í∏àÏï°ÏùÑ ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî" data-success="">Ïõê</span>
                    </div>
                    <div class="input-field col s12 m4">
                        <input id="add-fixed-payment-date" type="number" class="validate" min="1" max="31">
                        <label for="add-fixed-payment-date">Í≤∞Ï†úÏùº</label>
                        <span class="helper-text">1-31Ïùº (ÏÑ†ÌÉùÏÇ¨Ìï≠)</span>
                    </div>
                    <div class="input-field col s12 m4">
                        <select id="add-fixed-payment-method">
                            <option value="" disabled selected>Í≤∞Ï†úÏàòÎã® ÏÑ†ÌÉù</option>
                            <option value="ÌòÑÍ∏à">ÌòÑÍ∏à</option>
                            <option value="Ï≤¥ÌÅ¨">Ï≤¥ÌÅ¨</option>
                            <option value="Ïã†Ïö©">Ïã†Ïö©</option>
                        </select>
                        <label>Í≤∞Ï†úÏàòÎã®*</label>
                    </div>
                </div>
            </form>
        </div>
    </div>
    <div class="modal-footer">
        <a href="#!" class="modal-close waves-effect waves-green btn-flat">Ï∑®ÏÜå</a>
        <a href="#!" class="waves-effect waves-light btn green" id="save-fixed-expense-add">
            <i class="material-icons left">save</i>Ï†ÄÏû•
        </a>
    </div>
</div>

<!-- ÏÑ†ÎÇ©ÏßÄÏ∂ú Ï∂îÍ∞Ä Î™®Îã¨ -->
<div id="add-prepaid-expense-modal" class="modal modal-fixed-footer">
    <div class="modal-content">
        <h4><i class="material-icons left">add</i>ÏÑ†ÎÇ©ÏßÄÏ∂ú Ï∂îÍ∞Ä</h4>
        <div class="row">
            <form id="add-prepaid-expense-form" class="col s12">
                <div class="row">
                    <div class="input-field col s12">
                        <input id="add-prepaid-item-name" type="text" class="validate" required maxlength="100">
                        <label for="add-prepaid-item-name">Ìï≠Î™©Î™Ö*</label>
                        <span class="helper-text" data-error="Ìï≠Î™©Î™ÖÏùÑ ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî" data-success="">ÏµúÎåÄ 100Ïûê</span>
                    </div>
                </div>
                <div class="row">
                    <div class="input-field col s12 m4">
                        <input id="add-prepaid-amount" type="number" class="validate" required min="0" max="999999999">
                        <label for="add-prepaid-amount">Í∏àÏï°*</label>
                        <span class="helper-text" data-error="Ïò¨Î∞îÎ•∏ Í∏àÏï°ÏùÑ ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî" data-success="">Ïõê</span>
                    </div>
                    <div class="input-field col s12 m4">
                        <input id="add-prepaid-payment-date" type="number" class="validate" required min="1" max="31">
                        <label for="add-prepaid-payment-date">Í≤∞Ï†úÏùº*</label>
                        <span class="helper-text" data-error="Í≤∞Ï†úÏùºÏùÑ ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî" data-success="">1-31Ïùº</span>
                    </div>
                    <div class="input-field col s12 m4">
                        <select id="add-prepaid-payment-method" required>
                            <option value="" disabled selected>Í≤∞Ï†úÏàòÎã® ÏÑ†ÌÉù</option>
                            <option value="ÌòÑÍ∏à">ÌòÑÍ∏à</option>
                            <option value="Ï≤¥ÌÅ¨">Ï≤¥ÌÅ¨</option>
                            <option value="Ïã†Ïö©">Ïã†Ïö©</option>
                        </select>
                        <label>Í≤∞Ï†úÏàòÎã®*</label>
                    </div>
                </div>
            </form>
        </div>
    </div>
    <div class="modal-footer">
        <a href="#!" class="modal-close waves-effect waves-green btn-flat">Ï∑®ÏÜå</a>
        <a href="#!" class="waves-effect waves-light btn blue" id="save-prepaid-expense-add">
            <i class="material-icons left">save</i>Ï†ÄÏû•
        </a>
    </div>
</div>

<!-- Í≥†Ï†ïÏßÄÏ∂ú ÏàòÏ†ï Î™®Îã¨ -->
<div id="edit-fixed-expense-modal" class="modal modal-fixed-footer">
    <div class="modal-content">
        <h4><i class="material-icons left">edit</i>Í≥†Ï†ïÏßÄÏ∂ú ÏàòÏ†ï</h4>
        <div class="row">
            <form id="edit-fixed-expense-form" class="col s12">
                <input type="hidden" id="edit-fixed-expense-id">
                <div class="row">
                    <div class="input-field col s12">
                        <input id="edit-fixed-item-name" type="text" class="validate" required maxlength="100">
                        <label for="edit-fixed-item-name">Ìï≠Î™©Î™Ö*</label>
                        <span class="helper-text" data-error="Ìï≠Î™©Î™ÖÏùÑ ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî" data-success="">ÏµúÎåÄ 100Ïûê</span>
                    </div>
                </div>
                <div class="row">
                    <div class="input-field col s12 m4">
                        <input id="edit-fixed-amount" type="number" class="validate" required min="0" max="999999999">
                        <label for="edit-fixed-amount">Í∏àÏï°*</label>
                        <span class="helper-text" data-error="Ïò¨Î∞îÎ•∏ Í∏àÏï°ÏùÑ ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî" data-success="">Ïõê</span>
                    </div>
                    <div class="input-field col s12 m4">
                        <input id="edit-fixed-payment-date" type="number" class="validate" min="1" max="31">
                        <label for="edit-fixed-payment-date">Í≤∞Ï†úÏùº</label>
                        <span class="helper-text">1-31Ïùº (ÏÑ†ÌÉùÏÇ¨Ìï≠)</span>
                    </div>
                    <div class="input-field col s12 m4">
                        <select id="edit-fixed-payment-method">
                            <option value="" disabled>Í≤∞Ï†úÏàòÎã® ÏÑ†ÌÉù</option>
                            <option value="ÌòÑÍ∏à">ÌòÑÍ∏à</option>
                            <option value="Ï≤¥ÌÅ¨">Ï≤¥ÌÅ¨</option>
                            <option value="Ïã†Ïö©">Ïã†Ïö©</option>
                        </select>
                        <label>Í≤∞Ï†úÏàòÎã®*</label>
                    </div>
                </div>
            </form>
        </div>
    </div>
    <div class="modal-footer">
        <a href="#!" class="waves-effect waves-light btn red" id="delete-fixed-expense-confirm" style="float: left;">
            <i class="material-icons left">delete</i>ÏÇ≠Ï†ú
        </a>
        <a href="#!" class="modal-close waves-effect waves-green btn-flat">Ï∑®ÏÜå</a>
        <a href="#!" class="waves-effect waves-light btn green" id="save-fixed-expense-edit">
            <i class="material-icons left">save</i>Ï†ÄÏû•
        </a>
    </div>
</div>

<!-- ÏÑ†ÎÇ©ÏßÄÏ∂ú ÏàòÏ†ï Î™®Îã¨ -->
<div id="edit-prepaid-expense-modal" class="modal modal-fixed-footer">
    <div class="modal-content">
        <h4><i class="material-icons left">edit</i>ÏÑ†ÎÇ©ÏßÄÏ∂ú ÏàòÏ†ï</h4>
        <div class="row">
            <form id="edit-prepaid-expense-form" class="col s12">
                <input type="hidden" id="edit-prepaid-expense-id">
                <div class="row">
                    <div class="input-field col s12">
                        <input id="edit-prepaid-item-name" type="text" class="validate" required maxlength="100">
                        <label for="edit-prepaid-item-name">Ìï≠Î™©Î™Ö*</label>
                        <span class="helper-text" data-error="Ìï≠Î™©Î™ÖÏùÑ ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî" data-success="">ÏµúÎåÄ 100Ïûê</span>
                    </div>
                </div>
                <div class="row">
                    <div class="input-field col s12 m4">
                        <input id="edit-prepaid-amount" type="number" class="validate" required min="0" max="999999999">
                        <label for="edit-prepaid-amount">Í∏àÏï°*</label>
                        <span class="helper-text" data-error="Ïò¨Î∞îÎ•∏ Í∏àÏï°ÏùÑ ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî" data-success="">Ïõê</span>
                    </div>
                    <div class="input-field col s12 m4">
                        <input id="edit-prepaid-payment-date" type="number" class="validate" required min="1" max="31">
                        <label for="edit-prepaid-payment-date">Í≤∞Ï†úÏùº*</label>
                        <span class="helper-text" data-error="Í≤∞Ï†úÏùºÏùÑ ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî" data-success="">1-31Ïùº</span>
                    </div>
                    <div class="input-field col s12 m4">
                        <select id="edit-prepaid-payment-method" required>
                            <option value="" disabled>Í≤∞Ï†úÏàòÎã® ÏÑ†ÌÉù</option>
                            <option value="ÌòÑÍ∏à">ÌòÑÍ∏à</option>
                            <option value="Ï≤¥ÌÅ¨">Ï≤¥ÌÅ¨</option>
                            <option value="Ïã†Ïö©">Ïã†Ïö©</option>
                        </select>
                        <label>Í≤∞Ï†úÏàòÎã®*</label>
                    </div>
                </div>
            </form>
        </div>
    </div>
    <div class="modal-footer">
        <a href="#!" class="waves-effect waves-light btn red" id="delete-prepaid-expense-confirm" style="float: left;">
            <i class="material-icons left">delete</i>ÏÇ≠Ï†ú
        </a>
        <a href="#!" class="modal-close waves-effect waves-green btn-flat">Ï∑®ÏÜå</a>
        <a href="#!" class="waves-effect waves-light btn blue" id="save-prepaid-expense-edit">
            <i class="material-icons left">save</i>Ï†ÄÏû•
        </a>
    </div>
</div>

<script>
$(document).ready(function() {
    // Î™®Îã¨ Ï¥àÍ∏∞Ìôî
    M.Modal.init(document.querySelectorAll('.modal'));

    // ÏÖÄÎ†âÌä∏ Î∞ïÏä§ Ï¥àÍ∏∞Ìôî
    M.FormSelect.init(document.querySelectorAll('select'));

    // ÏõîÎ≥Ñ ÏÑ†ÌÉùÍ∏∞ Ï¥àÍ∏∞Ìôî
    initMonthSelector();

    // ÌòÑÏû¨ Ïõî Îç∞Ïù¥ÌÑ∞ Î°úÎìú
    loadCurrentMonthData();

    // Í≥†Ï†ïÏßÄÏ∂ú Ï∂îÍ∞Ä Î≤ÑÌäº Ïù¥Î≤§Ìä∏ Ìï∏Îì§Îü¨
    $('#save-fixed-expense-add').on('click', function() {
        saveNewFixedExpense();
    });

    // Í≥†Ï†ïÏßÄÏ∂ú ÏàòÏ†ï Î≤ÑÌäº Ïù¥Î≤§Ìä∏ Ìï∏Îì§Îü¨
    $('#save-fixed-expense-edit').on('click', function() {
        saveEditedFixedExpense();
    });

    // Í≥†Ï†ïÏßÄÏ∂ú ÏÇ≠Ï†ú Î≤ÑÌäº Ïù¥Î≤§Ìä∏ Ìï∏Îì§Îü¨
    $('#delete-fixed-expense-confirm').on('click', function() {
        deleteFixedExpense();
    });

    // ÏÑ†ÎÇ©ÏßÄÏ∂ú Ï∂îÍ∞Ä Î≤ÑÌäº Ïù¥Î≤§Ìä∏ Ìï∏Îì§Îü¨
    $('#save-prepaid-expense-add').on('click', function() {
        saveNewPrepaidExpense();
    });

    // ÏÑ†ÎÇ©ÏßÄÏ∂ú ÏàòÏ†ï Î≤ÑÌäº Ïù¥Î≤§Ìä∏ Ìï∏Îì§Îü¨
    $('#save-prepaid-expense-edit').on('click', function() {
        saveEditedPrepaidExpense();
    });

    // ÏÑ†ÎÇ©ÏßÄÏ∂ú ÏÇ≠Ï†ú Î≤ÑÌäº Ïù¥Î≤§Ìä∏ Ìï∏Îì§Îü¨
    $('#delete-prepaid-expense-confirm').on('click', function() {
        deletePrepaidExpense();
    });

    // ÌÖåÏù¥Î∏î Ìñâ ÎçîÎ∏îÌÅ¥Î¶≠ Ïù¥Î≤§Ìä∏
    $(document).on('dblclick', '.expense-row', function() {
        const expenseId = $(this).data('id');
        openEditExpenseModal(expenseId);
    });

    // Î™®Î∞îÏùº Ïπ¥Îìú Í∏∏Í≤å ÌÑ∞Ïπò Ïù¥Î≤§Ìä∏
    let touchTimer;
    $(document).on('touchstart', '.expense-card', function(e) {
        const expenseId = $(this).data('id');
        touchTimer = setTimeout(function() {
            openEditExpenseModal(expenseId);
        }, 800); // 800ms Í∏∏Í≤å ÌÑ∞Ïπò
    });

    $(document).on('touchend touchmove', '.expense-card', function() {
        clearTimeout(touchTimer);
    });

    // Î™®Î∞îÏùº Ïπ¥Îìú ÎçîÎ∏î ÌÉ≠ Ïù¥Î≤§Ìä∏ (ÎåÄÏïà)
    $(document).on('dblclick', '.expense-card', function() {
        const expenseId = $(this).data('id');
        openEditExpenseModal(expenseId);
    });

    // ÏÑ†ÎÇ©ÏßÄÏ∂ú ÌÖåÏù¥Î∏î Ìñâ ÎçîÎ∏îÌÅ¥Î¶≠ Ïù¥Î≤§Ìä∏
    $(document).on('dblclick', '.prepaid-expense-row', function() {
        const expenseId = $(this).data('id');
        openEditPrepaidExpenseModal(expenseId);
    });

    // ÏÑ†ÎÇ©ÏßÄÏ∂ú Î™®Î∞îÏùº Ïπ¥Îìú Í∏∏Í≤å ÌÑ∞Ïπò Ïù¥Î≤§Ìä∏
    let prepaidTouchTimer;
    $(document).on('touchstart', '.prepaid-expense-card', function(e) {
        const expenseId = $(this).data('id');
        prepaidTouchTimer = setTimeout(function() {
            openEditPrepaidExpenseModal(expenseId);
        }, 800); // 800ms Í∏∏Í≤å ÌÑ∞Ïπò
    });

    $(document).on('touchend touchmove', '.prepaid-expense-card', function() {
        clearTimeout(prepaidTouchTimer);
    });

    // ÏÑ†ÎÇ©ÏßÄÏ∂ú Î™®Î∞îÏùº Ïπ¥Îìú ÎçîÎ∏î ÌÉ≠ Ïù¥Î≤§Ìä∏ (ÎåÄÏïà)
    $(document).on('dblclick', '.prepaid-expense-card', function() {
        const expenseId = $(this).data('id');
        openEditPrepaidExpenseModal(expenseId);
    });

    // ÏõîÎ≥Ñ ÏÑ†ÌÉùÍ∏∞ Î≥ÄÍ≤Ω Ïù¥Î≤§Ìä∏
    $('#month-selector').on('change', function() {
        const selectedMonth = $(this).val();
        loadMonthData(selectedMonth);
    });

    // ÏïÑÏπ¥Ïù¥Î∏å ÏàòÏ†ï Î≤ÑÌäº
    $('#edit-archive-btn').on('click', function() {
        editArchiveData();
    });

    // Ïä§ÎÉÖÏÉ∑ ÏÉùÏÑ± Î≤ÑÌäº
    $('#create-archive-btn').on('click', function() {
        createMonthlySnapshot();
    });
});

let currentViewMode = 'current'; // 'current' or 'archive'
let currentSelectedMonth = new Date().getFullYear() + '-' + String(new Date().getMonth() + 1).padStart(2, '0');

function initMonthSelector() {
    const monthSelector = $('#month-selector');
    const currentDate = new Date();
    const currentYear = currentDate.getFullYear();
    const currentMonth = currentDate.getMonth() + 1;

    // ÌòÑÏû¨ ÏõîÎ∂ÄÌÑ∞ Í≥ºÍ±∞ 12Í∞úÏõîÍπåÏßÄ ÏÉùÏÑ±
    for (let i = 0; i < 12; i++) {
        const targetDate = new Date(currentYear, currentMonth - 1 - i, 1);
        const year = targetDate.getFullYear();
        const month = targetDate.getMonth() + 1;
        const value = year + '-' + String(month).padStart(2, '0');
        const text = year + 'ÎÖÑ ' + month + 'Ïõî';
        const isSelected = i === 0 ? 'selected' : '';

        monthSelector.append(`<option value="${value}" ${isSelected}>${text}</option>`);
    }

    M.FormSelect.init(document.querySelectorAll('select'));
}

function loadCurrentMonthData() {
    currentViewMode = 'current';
    $('#archive-controls').hide();
    $('#add-fixed-expense-btn, #add-prepaid-expense-btn').show();
    loadFixedExpenses();
    loadPrepaidExpenses();
}

function loadMonthData(selectedMonth) {
    currentSelectedMonth = selectedMonth;
    const currentYearMonth = new Date().getFullYear() + '-' + String(new Date().getMonth() + 1).padStart(2, '0');

    if (selectedMonth === currentYearMonth) {
        // ÌòÑÏû¨ Ïõî - Ïã§ÏãúÍ∞Ñ Îç∞Ïù¥ÌÑ∞
        currentViewMode = 'current';
        $('#archive-controls').hide();
        $('#add-fixed-expense-btn, #add-prepaid-expense-btn').show();
        loadFixedExpenses();
        loadPrepaidExpenses();
    } else {
        // Í≥ºÍ±∞ Ïõî - ÏïÑÏπ¥Ïù¥Î∏å Îç∞Ïù¥ÌÑ∞
        currentViewMode = 'archive';
        $('#archive-controls').show();
        $('#add-fixed-expense-btn, #add-prepaid-expense-btn').hide();
        loadArchiveData(selectedMonth);
    }
}

function loadArchiveData(month) {
    const [year, monthNum] = month.split('-');

    // ÏïÑÏπ¥Ïù¥Î∏åÎêú ÏßÄÏ∂ú ÏöîÏïΩ Îç∞Ïù¥ÌÑ∞ Î°úÎìú
    $.ajax({
        url: `http://localhost:8080/api/monthly-snapshots/expenses?year=${year}&month=${parseInt(monthNum)}`,
        type: 'GET',
        success: function(response) {
            if (response.success && response.data) {
                displayArchiveExpenseData(response.data);
            } else {
                displayNoArchiveMessage();
            }
        },
        error: function() {
            displayNoArchiveMessage();
        }
    });
}

function displayArchiveExpenseData(summary) {
    // Í≥†Ï†ïÏßÄÏ∂úÍ≥º ÏÑ†ÎÇ©ÏßÄÏ∂úÏùÑ ÏïÑÏπ¥Ïù¥Î∏å Îç∞Ïù¥ÌÑ∞Î°ú ÌëúÏãú (ÏùΩÍ∏∞ Ï†ÑÏö©)
    let fixedTbody = $('#fixed-expenses-table');
    let prepaidTbody = $('#prepaid-expenses-table');
    let fixedCards = $('#fixed-expenses-cards');
    let prepaidCards = $('#prepaid-expenses-cards');

    fixedTbody.empty();
    prepaidTbody.empty();
    fixedCards.empty();
    prepaidCards.empty();

    // ÏïÑÏπ¥Ïù¥Î∏å ÏöîÏïΩ Ï†ïÎ≥¥ ÌëúÏãú
    fixedTbody.append(`
        <tr>
            <td colspan="4" class="center-align" style="padding: 20px;">
                <h6>${currentSelectedMonth} ÏïÑÏπ¥Ïù¥Î∏å Îç∞Ïù¥ÌÑ∞</h6>
                <p>Ï¥ù ÏßÄÏ∂ú: ‚Ç©${parseInt(summary.total_expenses || 0).toLocaleString()}</p>
                <p>ÏßÄÏ∂ú ÏùºÏàò: ${summary.total_days || 0}Ïùº</p>
                <p>ÏùºÌèâÍ∑†: ‚Ç©${parseInt(summary.avg_daily_expense || 0).toLocaleString()}</p>
            </td>
        </tr>
    `);

    prepaidTbody.append(`
        <tr>
            <td colspan="4" class="center-align" style="padding: 20px;">
                <p>Ïπ¥ÌÖåÍ≥†Î¶¨Î≥Ñ ÏßÄÏ∂ú</p>
                <p>ÏãùÎπÑ: ‚Ç©${parseInt(summary.food_total || 0).toLocaleString()}</p>
                <p>ÏÉùÌïÑÌíà: ‚Ç©${parseInt(summary.necessities_total || 0).toLocaleString()}</p>
                <p>ÍµêÌÜµÎπÑ: ‚Ç©${parseInt(summary.transportation_total || 0).toLocaleString()}</p>
                <p>Í∏∞ÌÉÄ: ‚Ç©${parseInt(summary.other_total || 0).toLocaleString()}</p>
            </td>
        </tr>
    `);

    fixedCards.html(`
        <div class="center-align" style="padding: 20px;">
            <h6>${currentSelectedMonth} ÏïÑÏπ¥Ïù¥Î∏å Îç∞Ïù¥ÌÑ∞</h6>
            <p>Ï¥ù ÏßÄÏ∂ú: ‚Ç©${parseInt(summary.total_expenses || 0).toLocaleString()}</p>
            <p>ÏßÄÏ∂ú ÏùºÏàò: ${summary.total_days || 0}Ïùº</p>
            <p>ÏùºÌèâÍ∑†: ‚Ç©${parseInt(summary.avg_daily_expense || 0).toLocaleString()}</p>
        </div>
    `);

    prepaidCards.html(`
        <div class="center-align" style="padding: 20px;">
            <p><strong>Ïπ¥ÌÖåÍ≥†Î¶¨Î≥Ñ ÏßÄÏ∂ú</strong></p>
            <p>ÏãùÎπÑ: ‚Ç©${parseInt(summary.food_total || 0).toLocaleString()}</p>
            <p>ÏÉùÌïÑÌíà: ‚Ç©${parseInt(summary.necessities_total || 0).toLocaleString()}</p>
            <p>ÍµêÌÜµÎπÑ: ‚Ç©${parseInt(summary.transportation_total || 0).toLocaleString()}</p>
            <p>Í∏∞ÌÉÄ: ‚Ç©${parseInt(summary.other_total || 0).toLocaleString()}</p>
        </div>
    `);

    // Ï¥ùÏï° ÏóÖÎç∞Ïù¥Ìä∏
    $('#fixed-expenses-total').text('‚Ç©' + parseInt(summary.total_expenses || 0).toLocaleString());
    $('#prepaid-expenses-total').text('‚Ç©0');
    $('#total-monthly-expenses').text('‚Ç©' + parseInt(summary.total_expenses || 0).toLocaleString());
}

function displayNoArchiveMessage() {
    let fixedTbody = $('#fixed-expenses-table');
    let prepaidTbody = $('#prepaid-expenses-table');
    let fixedCards = $('#fixed-expenses-cards');
    let prepaidCards = $('#prepaid-expenses-cards');

    const message = `${currentSelectedMonth}Ïùò ÏïÑÏπ¥Ïù¥Î∏å Îç∞Ïù¥ÌÑ∞Í∞Ä ÏóÜÏäµÎãàÎã§.`;

    fixedTbody.html(`<tr><td colspan="4" class="center-align">${message}</td></tr>`);
    prepaidTbody.html(`<tr><td colspan="4" class="center-align">${message}</td></tr>`);
    fixedCards.html(`<div class="center-align">${message}</div>`);
    prepaidCards.html(`<div class="center-align">${message}</div>`);

    $('#fixed-expenses-total').text('‚Ç©0');
    $('#prepaid-expenses-total').text('‚Ç©0');
    $('#total-monthly-expenses').text('‚Ç©0');
}

function createMonthlySnapshot() {
    const [year, month] = currentSelectedMonth.split('-');

    $.ajax({
        url: 'http://localhost:8080/api/monthly-snapshots/create',
        type: 'POST',
        contentType: 'application/json',
        data: JSON.stringify({
            year: parseInt(year),
            month: parseInt(month)
        }),
        success: function(response) {
            if (response.success) {
                showMessage(`${currentSelectedMonth} Ïä§ÎÉÖÏÉ∑Ïù¥ ÏÉùÏÑ±ÎêòÏóàÏäµÎãàÎã§.`, 'success');
                loadMonthData(currentSelectedMonth);
            } else {
                showMessage('Ïä§ÎÉÖÏÉ∑ ÏÉùÏÑ±Ïóê Ïã§Ìå®ÌñàÏäµÎãàÎã§.', 'error');
            }
        },
        error: function() {
            showMessage('ÏÑúÎ≤Ñ Ïó∞Í≤∞Ïóê Ïã§Ìå®ÌñàÏäµÎãàÎã§.', 'error');
        }
    });
}

function editArchiveData() {
    showMessage('ÏïÑÏπ¥Ïù¥Î∏å ÏàòÏ†ï Í∏∞Îä•ÏùÄ Í∞úÎ∞ú Ï§ëÏûÖÎãàÎã§.', 'info');
}

function loadFixedExpenses() {
    $.ajax({
        url: 'http://localhost:8080/api/fixed-expenses',
        type: 'GET',
        success: function(response) {
            if (response.success) {
                displayFixedExpenses(response.data);
            } else {
                showMessage('Í≥†Ï†ïÏßÄÏ∂ú Îç∞Ïù¥ÌÑ∞Î•º Î∂àÎü¨Ïò¨ Ïàò ÏóÜÏäµÎãàÎã§.', 'error');
            }
        },
        error: function() {
            showMessage('ÏÑúÎ≤Ñ Ïó∞Í≤∞Ïóê Ïã§Ìå®ÌñàÏäµÎãàÎã§.', 'error');
        }
    });
}

function displayFixedExpenses(expenses) {
    let tbody = $('#fixed-expenses-table');
    let cardsContainer = $('#fixed-expenses-cards');

    tbody.empty();
    cardsContainer.empty();

    let totalAmount = 0;

    if (!expenses || expenses.length === 0) {
        tbody.append('<tr><td colspan="4" class="center-align">Í≥†Ï†ïÏßÄÏ∂úÏù¥ ÏóÜÏäµÎãàÎã§.</td></tr>');
        cardsContainer.append('<div class="center-align">Í≥†Ï†ïÏßÄÏ∂úÏù¥ ÏóÜÏäµÎãàÎã§.</div>');
        $('#fixed-expenses-total').text('Ï¥ù ‚Ç©0');
        return;
    }

    // Í≤∞Ï†úÏùº Í∏∞Ï§ÄÏúºÎ°ú Ï†ïÎ†¨ (NULLÏùÄ ÎØ∏Ï†ïÏúºÎ°ú Îß® Îí§Ïóê)
    expenses.sort((a, b) => {
        const dateA = a.payment_date;
        const dateB = b.payment_date;
        if (dateA === null || dateA === undefined) return 1; // AÍ∞Ä ÎØ∏Ï†ïÏù¥Î©¥ Îí§Î°ú
        if (dateB === null || dateB === undefined) return -1; // BÍ∞Ä ÎØ∏Ï†ïÏù¥Î©¥ Îí§Î°ú
        return dateA - dateB; // ÏùºÎ∞ò ÎÇ†ÏßúÎäî Ïò§Î¶ÑÏ∞®Ïàú
    });

    expenses.forEach(function(expense) {
        totalAmount += parseInt(expense.amount || 0);

        const paymentDate = expense.payment_date ? expense.payment_date + 'Ïùº' : '-';
        const amount = parseInt(expense.amount || 0);

        // ÌÖåÏù¥Î∏î Ìñâ Ï∂îÍ∞Ä
        let row = '<tr class="expense-row" data-id="' + expense.id + '" style="cursor: pointer;">' +
                  '<td style="color: #424242 !important;">' + (expense.item_name || '-') + '</td>' +
                  '<td class="negative" style="font-weight: bold;">‚Ç©' + amount.toLocaleString() + '</td>' +
                  '<td style="color: #424242 !important;">' + paymentDate + '</td>' +
                  '<td style="color: #424242 !important;">' + (expense.payment_method || '-') + '</td>' +
                  '</tr>';
        tbody.append(row);

        // Î™®Î∞îÏùº Ïπ¥Îìú Ï∂îÍ∞Ä
        let card = '<div class="expense-card" data-id="' + expense.id + '" style="margin-bottom: 10px; border-left: 4px solid #f44336; cursor: pointer;">' +
                   '<div class="card-content" style="padding: 12px;">' +
                       '<div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 8px;">' +
                           '<span style="font-weight: bold; color: #424242;">' + (expense.item_name || '-') + '</span>' +
                           '<span style="font-weight: bold; color: #f44336;">‚Ç©' + amount.toLocaleString() + '</span>' +
                       '</div>' +
                       '<div style="display: flex; justify-content: space-between; font-size: 14px; color: #666;">' +
                           '<span>üìÖ ' + paymentDate + '</span>' +
                           '<span>üí≥ ' + (expense.payment_method || '-') + '</span>' +
                       '</div>' +
                   '</div>' +
                   '</div>';
        cardsContainer.append(card);
    });

    // Ï¥ùÏï° ÏóÖÎç∞Ïù¥Ìä∏
    $('#fixed-expenses-total').text('‚Ç©' + totalAmount.toLocaleString());
    updateMonthlyExpensesTotal();
}

function saveNewFixedExpense() {
    // Ìèº Îç∞Ïù¥ÌÑ∞ ÏàòÏßë
    const itemName = $('#add-fixed-item-name').val().trim();
    const amount = $('#add-fixed-amount').val();
    const paymentDate = $('#add-fixed-payment-date').val();
    const paymentMethod = $('#add-fixed-payment-method').val();

    // Ïú†Ìö®ÏÑ± Í≤ÄÏÇ¨
    if (!itemName) {
        showMessage('Ìï≠Î™©Î™ÖÏùÑ ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî.', 'error');
        $('#add-fixed-item-name').focus();
        return;
    }

    if (!amount || amount <= 0) {
        showMessage('Ïò¨Î∞îÎ•∏ Í∏àÏï°ÏùÑ ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî.', 'error');
        $('#add-fixed-amount').focus();
        return;
    }

    if (!paymentMethod) {
        showMessage('Í≤∞Ï†úÏàòÎã®ÏùÑ ÏÑ†ÌÉùÌï¥Ï£ºÏÑ∏Ïöî.', 'error');
        return;
    }

    // API ÏöîÏ≤≠ Îç∞Ïù¥ÌÑ∞ Ï§ÄÎπÑ
    const data = {
        item_name: itemName,
        amount: parseInt(amount),
        payment_method: paymentMethod
    };

    // Í≤∞Ï†úÏùºÏù¥ ÏûÖÎ†•Îêú Í≤ΩÏö∞ÏóêÎßå Ï∂îÍ∞Ä
    if (paymentDate && paymentDate >= 1 && paymentDate <= 31) {
        data.payment_date = parseInt(paymentDate);
    }
    // Îπà Í∞íÏù¥Î©¥ payment_date ÌïÑÎìúÎ•º Ìè¨Ìï®ÌïòÏßÄ ÏïäÏùå (NULLÎ°ú Ï≤òÎ¶¨Îê®)

    // API Ìò∏Ï∂ú
    $.ajax({
        url: 'http://localhost:8080/api/fixed-expenses',
        type: 'POST',
        contentType: 'application/json',
        data: JSON.stringify(data),
        success: function(response) {
            if (response.success) {
                // ÏÑ±Í≥µ Î©îÏãúÏßÄ
                showMessage('ÏÉà Í≥†Ï†ïÏßÄÏ∂úÏù¥ Ï∂îÍ∞ÄÎêòÏóàÏäµÎãàÎã§.', 'success');

                // Î™®Îã¨ Îã´Í∏∞
                M.Modal.getInstance(document.getElementById('add-fixed-expense-modal')).close();

                // Ìèº Ï¥àÍ∏∞Ìôî
                clearFixedExpenseForm();

                // ÌÖåÏù¥Î∏î ÏÉàÎ°úÍ≥†Ïπ®
                setTimeout(function() {
                    loadFixedExpenses();
                }, 500);
            } else {
                showMessage(response.message || 'Í≥†Ï†ïÏßÄÏ∂ú Ï∂îÍ∞ÄÏóê Ïã§Ìå®ÌñàÏäµÎãàÎã§.', 'error');
            }
        },
        error: function(xhr) {
            let errorMessage = 'ÏÑúÎ≤Ñ Ïó∞Í≤∞Ïóê Ïã§Ìå®ÌñàÏäµÎãàÎã§.';
            if (xhr.responseJSON && xhr.responseJSON.message) {
                errorMessage = xhr.responseJSON.message;
            }
            showMessage(errorMessage, 'error');
        }
    });
}

function clearFixedExpenseForm() {
    $('#add-fixed-expense-form')[0].reset();
    M.FormSelect.init(document.querySelectorAll('select'));
    M.updateTextFields();
}

function openEditExpenseModal(expenseId) {
    // APIÏóêÏÑú Í≥†Ï†ïÏßÄÏ∂ú Ï†ïÎ≥¥ Í∞ÄÏ†∏Ïò§Í∏∞
    $.ajax({
        url: 'http://localhost:8080/api/fixed-expenses/' + expenseId,
        type: 'GET',
        success: function(response) {
            if (response.success) {
                const expense = response.data;

                // ÌèºÏóê Îç∞Ïù¥ÌÑ∞ Ï±ÑÏö∞Í∏∞
                $('#edit-fixed-expense-id').val(expense.id);
                $('#edit-fixed-item-name').val(expense.item_name);
                $('#edit-fixed-amount').val(expense.amount);
                $('#edit-fixed-payment-date').val(expense.payment_date || '');
                $('#edit-fixed-payment-method').val(expense.payment_method);

                // ÎùºÎ≤® ÏóÖÎç∞Ïù¥Ìä∏
                M.updateTextFields();
                M.FormSelect.init(document.querySelectorAll('select'));

                // Î™®Îã¨ Ïó¥Í∏∞
                M.Modal.getInstance(document.getElementById('edit-fixed-expense-modal')).open();
            } else {
                showMessage('Í≥†Ï†ïÏßÄÏ∂ú Ï†ïÎ≥¥Î•º Î∂àÎü¨Ïò¨ Ïàò ÏóÜÏäµÎãàÎã§.', 'error');
            }
        },
        error: function() {
            showMessage('ÏÑúÎ≤Ñ Ïó∞Í≤∞Ïóê Ïã§Ìå®ÌñàÏäµÎãàÎã§.', 'error');
        }
    });
}

function saveEditedFixedExpense() {
    const expenseId = $('#edit-fixed-expense-id').val();
    const itemName = $('#edit-fixed-item-name').val().trim();
    const amount = $('#edit-fixed-amount').val();
    const paymentDate = $('#edit-fixed-payment-date').val();
    const paymentMethod = $('#edit-fixed-payment-method').val();

    // Ïú†Ìö®ÏÑ± Í≤ÄÏÇ¨
    if (!itemName) {
        showMessage('Ìï≠Î™©Î™ÖÏùÑ ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî.', 'error');
        $('#edit-fixed-item-name').focus();
        return;
    }

    if (!amount || amount <= 0) {
        showMessage('Ïò¨Î∞îÎ•∏ Í∏àÏï°ÏùÑ ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî.', 'error');
        $('#edit-fixed-amount').focus();
        return;
    }

    if (!paymentMethod) {
        showMessage('Í≤∞Ï†úÏàòÎã®ÏùÑ ÏÑ†ÌÉùÌï¥Ï£ºÏÑ∏Ïöî.', 'error');
        return;
    }

    // API ÏöîÏ≤≠ Îç∞Ïù¥ÌÑ∞ Ï§ÄÎπÑ
    const data = {
        item_name: itemName,
        amount: parseInt(amount),
        payment_method: paymentMethod
    };

    // Í≤∞Ï†úÏùº Ï≤òÎ¶¨ (Îπà Í∞íÏù¥Î©¥ null, Í∞íÏù¥ ÏûàÏúºÎ©¥ Ï†ïÏàò)
    if (paymentDate && paymentDate >= 1 && paymentDate <= 31) {
        data.payment_date = parseInt(paymentDate);
    } else {
        data.payment_date = null; // Îπà Í∞íÏùº Îïå Î™ÖÏãúÏ†ÅÏúºÎ°ú null Ï†ÑÏÜ°
    }

    // API Ìò∏Ï∂ú
    $.ajax({
        url: 'http://localhost:8080/api/fixed-expenses/' + expenseId,
        type: 'PUT',
        contentType: 'application/json',
        data: JSON.stringify(data),
        success: function(response) {
            if (response.success) {
                showMessage('Í≥†Ï†ïÏßÄÏ∂úÏù¥ ÏàòÏ†ïÎêòÏóàÏäµÎãàÎã§.', 'success');
                M.Modal.getInstance(document.getElementById('edit-fixed-expense-modal')).close();

                setTimeout(function() {
                    loadFixedExpenses();
                }, 500);
            } else {
                showMessage(response.message || 'Í≥†Ï†ïÏßÄÏ∂ú ÏàòÏ†ïÏóê Ïã§Ìå®ÌñàÏäµÎãàÎã§.', 'error');
            }
        },
        error: function(xhr) {
            let errorMessage = 'ÏÑúÎ≤Ñ Ïó∞Í≤∞Ïóê Ïã§Ìå®ÌñàÏäµÎãàÎã§.';
            if (xhr.responseJSON && xhr.responseJSON.message) {
                errorMessage = xhr.responseJSON.message;
            }
            showMessage(errorMessage, 'error');
        }
    });
}


function deleteFixedExpense() {
    const expenseId = $('#edit-fixed-expense-id').val();

    if (!expenseId) {
        showMessage('ÏÇ≠Ï†úÌï† Í≥†Ï†ïÏßÄÏ∂úÏùÑ ÏÑ†ÌÉùÌï¥Ï£ºÏÑ∏Ïöî.', 'error');
        return;
    }

    if (!confirm('Ï†ïÎßêÎ°ú Ïù¥ Í≥†Ï†ïÏßÄÏ∂úÏùÑ ÏÇ≠Ï†úÌïòÏãúÍ≤†ÏäµÎãàÍπå?')) {
        return;
    }

    $.ajax({
        url: 'http://localhost:8080/api/fixed-expenses/' + expenseId,
        type: 'DELETE',
        success: function(response) {
            if (response.success) {
                showMessage('Í≥†Ï†ïÏßÄÏ∂úÏù¥ ÏÇ≠Ï†úÎêòÏóàÏäµÎãàÎã§.', 'success');
                M.Modal.getInstance(document.getElementById('edit-fixed-expense-modal')).close();

                setTimeout(function() {
                    loadFixedExpenses();
                }, 500);
            } else {
                showMessage(response.message || 'Í≥†Ï†ïÏßÄÏ∂ú ÏÇ≠Ï†úÏóê Ïã§Ìå®ÌñàÏäµÎãàÎã§.', 'error');
            }
        },
        error: function(xhr) {
            let errorMessage = 'ÏÑúÎ≤Ñ Ïó∞Í≤∞Ïóê Ïã§Ìå®ÌñàÏäµÎãàÎã§.';
            if (xhr.responseJSON && xhr.responseJSON.message) {
                errorMessage = xhr.responseJSON.message;
            }
            showMessage(errorMessage, 'error');
        }
    });
}

function loadPrepaidExpenses() {
    $.ajax({
        url: 'http://localhost:8080/api/prepaid-expenses',
        type: 'GET',
        success: function(response) {
            if (response.success) {
                displayPrepaidExpenses(response.data);
            } else {
                showMessage('ÏÑ†ÎÇ©ÏßÄÏ∂ú Îç∞Ïù¥ÌÑ∞Î•º Î∂àÎü¨Ïò¨ Ïàò ÏóÜÏäµÎãàÎã§.', 'error');
            }
        },
        error: function() {
            showMessage('ÏÑúÎ≤Ñ Ïó∞Í≤∞Ïóê Ïã§Ìå®ÌñàÏäµÎãàÎã§.', 'error');
        }
    });
}

function displayPrepaidExpenses(expenses) {
    let tbody = $('#prepaid-expenses-table');
    let cardsContainer = $('#prepaid-expenses-cards');

    tbody.empty();
    cardsContainer.empty();

    if (!expenses || expenses.length === 0) {
        tbody.append('<tr><td colspan="4" class="center-align">ÏÑ†ÎÇ©ÏßÄÏ∂úÏù¥ ÏóÜÏäµÎãàÎã§.</td></tr>');
        cardsContainer.append('<div class="center-align">ÏÑ†ÎÇ©ÏßÄÏ∂úÏù¥ ÏóÜÏäµÎãàÎã§.</div>');
        return;
    }

    // Í≤∞Ï†úÏùº Í∏∞Ï§ÄÏúºÎ°ú Ï†ïÎ†¨
    expenses.sort((a, b) => {
        return a.payment_date - b.payment_date;
    });

    expenses.forEach(function(expense) {
        const paymentDate = expense.payment_date + 'Ïùº';
        const amount = parseInt(expense.amount || 0);

        // ÌÖåÏù¥Î∏î Ìñâ Ï∂îÍ∞Ä
        let row = '<tr class="prepaid-expense-row" data-id="' + expense.id + '" style="cursor: pointer;">' +
                  '<td style="color: #424242 !important;">' + (expense.item_name || '-') + '</td>' +
                  '<td class="negative" style="font-weight: bold;">‚Ç©' + amount.toLocaleString() + '</td>' +
                  '<td style="color: #424242 !important;">' + paymentDate + '</td>' +
                  '<td style="color: #424242 !important;">' + (expense.payment_method || '-') + '</td>' +
                  '</tr>';
        tbody.append(row);

        // Î™®Î∞îÏùº Ïπ¥Îìú Ï∂îÍ∞Ä
        let card = '<div class="prepaid-expense-card" data-id="' + expense.id + '" style="margin-bottom: 10px; border-left: 4px solid #2196F3; cursor: pointer;">' +
                   '<div class="card-content" style="padding: 12px;">' +
                       '<div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 8px;">' +
                           '<span style="font-weight: bold; color: #424242;">' + (expense.item_name || '-') + '</span>' +
                           '<span style="font-weight: bold; color: #2196F3;">‚Ç©' + amount.toLocaleString() + '</span>' +
                       '</div>' +
                       '<div style="display: flex; justify-content: space-between; font-size: 14px; color: #666;">' +
                           '<span>üìÖ ' + paymentDate + '</span>' +
                           '<span>üí≥ ' + (expense.payment_method || '-') + '</span>' +
                       '</div>' +
                   '</div>' +
                   '</div>';
        cardsContainer.append(card);
    });

    // ÏÑ†ÎÇ©ÏßÄÏ∂ú Ï¥ùÏï° ÏóÖÎç∞Ïù¥Ìä∏
    let totalAmount = expenses.reduce((sum, expense) => sum + parseInt(expense.amount || 0), 0);
    $('#prepaid-expenses-total').text('‚Ç©' + totalAmount.toLocaleString());
    updateMonthlyExpensesTotal();
}

function saveNewPrepaidExpense() {
    // Ìèº Îç∞Ïù¥ÌÑ∞ ÏàòÏßë
    const itemName = $('#add-prepaid-item-name').val().trim();
    const amount = $('#add-prepaid-amount').val();
    const paymentDate = $('#add-prepaid-payment-date').val();
    const paymentMethod = $('#add-prepaid-payment-method').val();

    // Ïú†Ìö®ÏÑ± Í≤ÄÏÇ¨
    if (!itemName) {
        showMessage('Ìï≠Î™©Î™ÖÏùÑ ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî.', 'error');
        $('#add-prepaid-item-name').focus();
        return;
    }

    if (!amount || amount <= 0) {
        showMessage('Ïò¨Î∞îÎ•∏ Í∏àÏï°ÏùÑ ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî.', 'error');
        $('#add-prepaid-amount').focus();
        return;
    }

    if (!paymentDate || paymentDate < 1 || paymentDate > 31) {
        showMessage('Ïò¨Î∞îÎ•∏ Í≤∞Ï†úÏùºÏùÑ ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî.', 'error');
        $('#add-prepaid-payment-date').focus();
        return;
    }

    if (!paymentMethod) {
        showMessage('Í≤∞Ï†úÏàòÎã®ÏùÑ ÏÑ†ÌÉùÌï¥Ï£ºÏÑ∏Ïöî.', 'error');
        return;
    }

    // API ÏöîÏ≤≠ Îç∞Ïù¥ÌÑ∞ Ï§ÄÎπÑ
    const data = {
        item_name: itemName,
        amount: parseInt(amount),
        payment_date: parseInt(paymentDate),
        payment_method: paymentMethod
    };

    // API Ìò∏Ï∂ú
    $.ajax({
        url: 'http://localhost:8080/api/prepaid-expenses',
        type: 'POST',
        contentType: 'application/json',
        data: JSON.stringify(data),
        success: function(response) {
            if (response.success) {
                showMessage('ÏÉà ÏÑ†ÎÇ©ÏßÄÏ∂úÏù¥ Ï∂îÍ∞ÄÎêòÏóàÏäµÎãàÎã§.', 'success');
                M.Modal.getInstance(document.getElementById('add-prepaid-expense-modal')).close();
                clearPrepaidExpenseForm();

                setTimeout(function() {
                    loadPrepaidExpenses();
                }, 500);
            } else {
                showMessage(response.message || 'ÏÑ†ÎÇ©ÏßÄÏ∂ú Ï∂îÍ∞ÄÏóê Ïã§Ìå®ÌñàÏäµÎãàÎã§.', 'error');
            }
        },
        error: function(xhr) {
            let errorMessage = 'ÏÑúÎ≤Ñ Ïó∞Í≤∞Ïóê Ïã§Ìå®ÌñàÏäµÎãàÎã§.';
            if (xhr.responseJSON && xhr.responseJSON.message) {
                errorMessage = xhr.responseJSON.message;
            }
            showMessage(errorMessage, 'error');
        }
    });
}

function openEditPrepaidExpenseModal(expenseId) {
    // APIÏóêÏÑú ÏÑ†ÎÇ©ÏßÄÏ∂ú Ï†ïÎ≥¥ Í∞ÄÏ†∏Ïò§Í∏∞
    $.ajax({
        url: 'http://localhost:8080/api/prepaid-expenses/' + expenseId,
        type: 'GET',
        success: function(response) {
            if (response.success) {
                const expense = response.data;

                // ÌèºÏóê Îç∞Ïù¥ÌÑ∞ Ï±ÑÏö∞Í∏∞
                $('#edit-prepaid-expense-id').val(expense.id);
                $('#edit-prepaid-item-name').val(expense.item_name);
                $('#edit-prepaid-amount').val(expense.amount);
                $('#edit-prepaid-payment-date').val(expense.payment_date);
                $('#edit-prepaid-payment-method').val(expense.payment_method);

                // ÎùºÎ≤® ÏóÖÎç∞Ïù¥Ìä∏
                M.updateTextFields();
                M.FormSelect.init(document.querySelectorAll('select'));

                // Î™®Îã¨ Ïó¥Í∏∞
                M.Modal.getInstance(document.getElementById('edit-prepaid-expense-modal')).open();
            } else {
                showMessage('ÏÑ†ÎÇ©ÏßÄÏ∂ú Ï†ïÎ≥¥Î•º Î∂àÎü¨Ïò¨ Ïàò ÏóÜÏäµÎãàÎã§.', 'error');
            }
        },
        error: function() {
            showMessage('ÏÑúÎ≤Ñ Ïó∞Í≤∞Ïóê Ïã§Ìå®ÌñàÏäµÎãàÎã§.', 'error');
        }
    });
}

function saveEditedPrepaidExpense() {
    const expenseId = $('#edit-prepaid-expense-id').val();
    const itemName = $('#edit-prepaid-item-name').val().trim();
    const amount = $('#edit-prepaid-amount').val();
    const paymentDate = $('#edit-prepaid-payment-date').val();
    const paymentMethod = $('#edit-prepaid-payment-method').val();

    // Ïú†Ìö®ÏÑ± Í≤ÄÏÇ¨
    if (!itemName) {
        showMessage('Ìï≠Î™©Î™ÖÏùÑ ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî.', 'error');
        $('#edit-prepaid-item-name').focus();
        return;
    }

    if (!amount || amount <= 0) {
        showMessage('Ïò¨Î∞îÎ•∏ Í∏àÏï°ÏùÑ ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî.', 'error');
        $('#edit-prepaid-amount').focus();
        return;
    }

    if (!paymentDate || paymentDate < 1 || paymentDate > 31) {
        showMessage('Ïò¨Î∞îÎ•∏ Í≤∞Ï†úÏùºÏùÑ ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî.', 'error');
        $('#edit-prepaid-payment-date').focus();
        return;
    }

    if (!paymentMethod) {
        showMessage('Í≤∞Ï†úÏàòÎã®ÏùÑ ÏÑ†ÌÉùÌï¥Ï£ºÏÑ∏Ïöî.', 'error');
        return;
    }

    // API ÏöîÏ≤≠ Îç∞Ïù¥ÌÑ∞ Ï§ÄÎπÑ
    const data = {
        item_name: itemName,
        amount: parseInt(amount),
        payment_date: parseInt(paymentDate),
        payment_method: paymentMethod
    };

    // API Ìò∏Ï∂ú
    $.ajax({
        url: 'http://localhost:8080/api/prepaid-expenses/' + expenseId,
        type: 'PUT',
        contentType: 'application/json',
        data: JSON.stringify(data),
        success: function(response) {
            if (response.success) {
                showMessage('ÏÑ†ÎÇ©ÏßÄÏ∂úÏù¥ ÏàòÏ†ïÎêòÏóàÏäµÎãàÎã§.', 'success');
                M.Modal.getInstance(document.getElementById('edit-prepaid-expense-modal')).close();

                setTimeout(function() {
                    loadPrepaidExpenses();
                }, 500);
            } else {
                showMessage(response.message || 'ÏÑ†ÎÇ©ÏßÄÏ∂ú ÏàòÏ†ïÏóê Ïã§Ìå®ÌñàÏäµÎãàÎã§.', 'error');
            }
        },
        error: function(xhr) {
            let errorMessage = 'ÏÑúÎ≤Ñ Ïó∞Í≤∞Ïóê Ïã§Ìå®ÌñàÏäµÎãàÎã§.';
            if (xhr.responseJSON && xhr.responseJSON.message) {
                errorMessage = xhr.responseJSON.message;
            }
            showMessage(errorMessage, 'error');
        }
    });
}

function deletePrepaidExpense() {
    const expenseId = $('#edit-prepaid-expense-id').val();

    if (!expenseId) {
        showMessage('ÏÇ≠Ï†úÌï† ÏÑ†ÎÇ©ÏßÄÏ∂úÏùÑ ÏÑ†ÌÉùÌï¥Ï£ºÏÑ∏Ïöî.', 'error');
        return;
    }

    if (!confirm('Ï†ïÎßêÎ°ú Ïù¥ ÏÑ†ÎÇ©ÏßÄÏ∂úÏùÑ ÏÇ≠Ï†úÌïòÏãúÍ≤†ÏäµÎãàÍπå?')) {
        return;
    }

    $.ajax({
        url: 'http://localhost:8080/api/prepaid-expenses/' + expenseId,
        type: 'DELETE',
        success: function(response) {
            if (response.success) {
                showMessage('ÏÑ†ÎÇ©ÏßÄÏ∂úÏù¥ ÏÇ≠Ï†úÎêòÏóàÏäµÎãàÎã§.', 'success');
                M.Modal.getInstance(document.getElementById('edit-prepaid-expense-modal')).close();

                setTimeout(function() {
                    loadPrepaidExpenses();
                }, 500);
            } else {
                showMessage(response.message || 'ÏÑ†ÎÇ©ÏßÄÏ∂ú ÏÇ≠Ï†úÏóê Ïã§Ìå®ÌñàÏäµÎãàÎã§.', 'error');
            }
        },
        error: function(xhr) {
            let errorMessage = 'ÏÑúÎ≤Ñ Ïó∞Í≤∞Ïóê Ïã§Ìå®ÌñàÏäµÎãàÎã§.';
            if (xhr.responseJSON && xhr.responseJSON.message) {
                errorMessage = xhr.responseJSON.message;
            }
            showMessage(errorMessage, 'error');
        }
    });
}

function clearPrepaidExpenseForm() {
    $('#add-prepaid-expense-form')[0].reset();
    M.FormSelect.init(document.querySelectorAll('select'));
    M.updateTextFields();
}

function updateMonthlyExpensesTotal() {
    // Í≥†Ï†ïÏßÄÏ∂úÍ≥º ÏÑ†ÎÇ©ÏßÄÏ∂ú Ï¥ùÏï° Í≥ÑÏÇ∞
    const fixedExpensesText = $('#fixed-expenses-total').text();
    const prepaidExpensesText = $('#prepaid-expenses-total').text();

    // ÌÖçÏä§Ìä∏ÏóêÏÑú Ïà´Ïûê Ï∂îÏ∂ú (‚Ç© Î∞è ÏâºÌëú Ï†úÍ±∞)
    const fixedAmount = parseInt(fixedExpensesText.replace(/[‚Ç©,]/g, '') || '0');
    const prepaidAmount = parseInt(prepaidExpensesText.replace(/[‚Ç©,]/g, '') || '0');

    const totalAmount = fixedAmount + prepaidAmount;
    $('#total-monthly-expenses').text('‚Ç©' + totalAmount.toLocaleString());
}

function showMessage(text, type) {
    let colorClass = 'blue';
    if (type === 'error') colorClass = 'red';
    if (type === 'success') colorClass = 'green';

    M.toast({
        html: text,
        classes: colorClass + ' white-text',
        displayLength: 3000
    });
}
</script>

<?php include 'includes/footer.php'; ?>