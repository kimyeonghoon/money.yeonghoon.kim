# =====================================
# Nginx 프로덕션 설정 - money.yeonghoon.kim
# =====================================
#
# 배치 위치: /etc/nginx/conf.d/money.yeonghoon.kim.conf
#
# 아키텍처:
# - 프론트엔드: Nginx → PHP-FPM (직접 서빙)
# - 백엔드 API: Nginx → Docker Container (Reverse Proxy)
#
# 테스트: sudo nginx -t
# 적용: sudo systemctl reload nginx

# HTTP → HTTPS 리다이렉트
server {
    listen 80;
    server_name money.yeonghoon.kim;

    # Let's Encrypt ACME Challenge (SSL 인증서 갱신용)
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    # 나머지 모든 요청은 HTTPS로 리다이렉트
    location / {
        return 301 https://$server_name$request_uri;
    }
}

# HTTPS 서버 설정
server {
    listen 443 ssl http2;
    server_name money.yeonghoon.kim;

    # =====================================
    # SSL 인증서 설정
    # =====================================
    # TODO: 실제 인증서 경로로 수정 필요
    ssl_certificate /etc/letsencrypt/live/money.yeonghoon.kim/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/money.yeonghoon.kim/privkey.pem;

    # SSL 보안 설정 (Mozilla Intermediate Configuration)
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;

    # OCSP Stapling (OCSP responder URL이 없는 인증서는 자동으로 비활성화됨)
    ssl_stapling on;
    ssl_stapling_verify on;
    ssl_trusted_certificate /etc/letsencrypt/live/money.yeonghoon.kim/chain.pem;

    # =====================================
    # 보안 헤더
    # =====================================
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://cdnjs.cloudflare.com https://ajax.googleapis.com; style-src 'self' 'unsafe-inline' https://cdnjs.cloudflare.com https://fonts.googleapis.com; font-src 'self' https://cdnjs.cloudflare.com https://fonts.gstatic.com; img-src 'self' data: https:; connect-src 'self';" always;

    # =====================================
    # 프론트엔드 설정
    # =====================================
    # 프로젝트 frontend 폴더 직접 사용
    root /data/money.yeonghoon.kim/frontend;
    index index.php index.html;

    # 최대 업로드 크기
    client_max_body_size 10M;

    # 로그 설정
    access_log /var/log/nginx/money.yeonghoon.kim-access.log;
    error_log /var/log/nginx/money.yeonghoon.kim-error.log warn;

    # =====================================
    # 백엔드 API 프록시 (Docker Container)
    # =====================================
    location /api/ {
        # Docker 컨테이너로 프록시 (포트 8080)
        proxy_pass http://127.0.0.1:8080/;
        proxy_http_version 1.1;

        # 프록시 헤더 설정
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;

        # 타임아웃 설정
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;

        # 버퍼링 설정
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;

        # CORS 헤더 (API 전용)
        add_header Access-Control-Allow-Origin "https://money.yeonghoon.kim" always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Authorization, Content-Type, X-Requested-With" always;
        add_header Access-Control-Allow-Credentials "true" always;

        # OPTIONS 메서드 처리 (CORS preflight)
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin "https://money.yeonghoon.kim";
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
            add_header Access-Control-Allow-Headers "Authorization, Content-Type, X-Requested-With";
            add_header Access-Control-Allow-Credentials "true";
            add_header Content-Length 0;
            add_header Content-Type text/plain;
            return 204;
        }
    }

    # =====================================
    # 프론트엔드 PHP 처리
    # =====================================
    location ~ \.php$ {
        try_files $uri =404;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;

        # PHP-FPM 소켓 (기존 서버 설정)
        fastcgi_pass unix:/run/php-fpm/www.sock;

        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        include fastcgi_params;

        # 타임아웃 및 버퍼 설정
        fastcgi_read_timeout 300;
        fastcgi_buffers 64 16k;
    }

    # =====================================
    # 루트 경로 처리
    # =====================================
    location / {
        index index.php index.html;
        try_files $uri $uri/ /index.php?$query_string;
    }

    # =====================================
    # 정적 파일 처리 (캐싱)
    # =====================================
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
        try_files $uri =404;
    }

    # =====================================
    # 보안: 민감한 파일 접근 차단
    # =====================================
    # 숨겨진 파일 (.git, .env 등)
    location ~ /\. {
        deny all;
        return 404;
    }

    # 백업 파일
    location ~ ~$ {
        deny all;
        return 404;
    }

    # 설정 파일
    location ~ \.(sql|conf|config|log)$ {
        deny all;
        return 404;
    }

    # =====================================
    # 상태 확인 엔드포인트 (모니터링용)
    # =====================================
    location /health {
        access_log off;
        return 200 "OK\n";
        add_header Content-Type text/plain;
    }
}

# =====================================
# 추가 설정 참고사항
# =====================================
#
# 1. SSL 인증서 발급 (Let's Encrypt):
#    sudo certbot --nginx -d money.yeonghoon.kim
#
# 2. PHP-FPM 소켓 경로 확인:
#    ls -la /var/run/php/
#
# 3. Nginx 설정 테스트:
#    sudo nginx -t
#
# 4. Nginx 재시작:
#    sudo systemctl reload nginx
#
# 5. 로그 확인:
#    sudo tail -f /var/log/nginx/money.yeonghoon.kim-error.log